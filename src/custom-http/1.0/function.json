{
  "description": "Sends a HTTP(S) request",
  "label": "Custom HTTP(S)",
  "category": "External",
  "icon": {
    "name": "CloudIcon",
    "color": "Orange"
  },
  "options": [
    {
      "info": "HTTP defines a set of request methods to indicate the desired action to be performed for the given resource.",
      "label": "Method",
      "meta": {
        "validations": { "required": true },
        "default": "get",
        "type": "Select",
        "values": [
          {
            "label": "GET",
            "value": "get"
          },
          {
            "label": "POST",
            "value": "post"
          },
          {
            "label": "PUT",
            "value": "put"
          },
          {
            "label": "PATCH",
            "value": "patch"
          },
          {
            "label": "DELETE",
            "value": "delete"
          },
          {
            "label": "HEAD",
            "value": "head"
          },
          {
            "label": "OPTIONS",
            "value": "options"
          }
        ]
      },
      "name": "method"
    },
    {
      "info": "Sometimes you may need to pass some additional information in your request, this is possible by adding variables in your header.",
      "label": "Headers",
      "meta": {
        "type": "Map"
      },
      "name": "headers"
    },
    {
      "info": "Enter what protocol the receiving end needs to use. You can choose between HTTP and HTTPS, which one you should use depends on your host.",
      "label": "Protocol",
      "meta": {
        "type": "Select",
        "default": "https",
        "validations": {
          "required": true
        },
        "values": [
          {
            "label": "HTTP",
            "value": "http"
          },
          {
            "label": "HTTPS",
            "value": "https"
          }
        ]
      },
      "name": "protocol"
    },
    {
      "info": "Enter the URL of the API that you want to use.",
      "label": "Url",
      "configuration": {
        "placeholder": "jsonplaceholder.typicode.com/posts/{{id}}"
      },
      "meta": {
        "validations": {
          "required": true
        },
        "type": "Text"
      },
      "name": "url"
    },
    {
      "info": "Map the values that you want to use in your url",
      "label": "Url Parameters",
      "meta": {
        "type": "Map"
      },
      "name": "urlParameters"
    },
    {
      "info": "Query parameters can be defined as the optional key-value pairs that appear after the question mark in the URL.",
      "label": "Query Parameters",
      "meta": {
        "type": "Map"
      },
      "name": "queryParameters"
    },
    {
      "name": "bodyType",
      "label": "Body type",
      "info": "Raw will use the body, if encoded is selected the body will NOT be used, only the body parameters as (key, value)",
      "meta": {
        "type": "Select",
        "default": "raw",
        "values": [
          { "label": "Raw", "value": "raw" },
          { "label": "x-www-form-urlencoded", "value": "url_encoded" }
        ],
        "validations": {
          "required": true
        }
      }
    },
    {
      "info": "An optional body containing data associated with the request.",
      "label": "Body",
      "configuration": {
        "placeholder": "{ \"title\": \"{{title}}\",  \"body\": \"{{body}}\" }"
      },
      "meta": {
        "type": "MultilineText"
      },
      "name": "body"
    },
    {
      "info": "Map the values that you want to use in your body.",
      "label": "Body Parameters",
      "meta": {
        "type": "Map"
      },
      "name": "bodyParameters"
    },
    {
      "info": "The schema model can be utilized to type the output of this step when it is an object or an array of objects.",
      "meta": {
        "type": "SchemaModel"
      },
      "name": "schemaModel",
      "label": "Schema Model"
    },
    {
      "info": "The name of the variable you want for the status code of the response.",
      "name": "responseCode",
      "label": "Response code as",
      "meta": {
        "type": "Output",
        "output": {
          "type": "Number"
        }
      }
    },
    {
      "name": "as",
      "label": "Response as",
      "meta": {
        "type": "Output",
        "validations": {
          "required": true
        },
        "output": {
          "anyOf": [
            { "type": "Text" },
            { "type": "Object", "schemaModel": "schemaModel" },
            {
              "type": "Array",
              "schemaModel": "schemaModel",
              "dataType": "SCHEMA"
            }
          ]
        }
      }
    }
  ],
  "yields": "NONE"
}
